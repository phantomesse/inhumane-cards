& {
  $padding: $grid * 3;
  box-sizing: border-box;
  padding: $padding $padding / 2 calc(#{$padding} + env(safe-area-inset-bottom));

  &:first-of-type {
    padding-left: calc(#{$padding} + env(safe-area-inset-left));
  }

  &:last-of-type {
    padding-right: calc(#{$padding} + env(safe-area-inset-right));
  }
}

.inner {
  @include set-colors($white-theme);
  border-radius: $border-radius;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  font-size: $card-font-size;
  height: 100%;
  justify-content: space-between;
  padding: $card-padding;
  position: relative;

  $check-size: $grid * 10;
  .fa-check {
    $size: $check-size;
    font-size: $size * 2 / 3;
    background: hotpink;
    position: absolute;
    top: calc(50% - #{$size / 2});
    left: calc(50% - #{$size / 2});
    display: none;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    color: #fff;
    width: $size;
    height: $size;
  }

  .order-counter {
    $size: $grid * 5;
    background: map-get($black-theme, primary-bg-color);
    border-radius: 50%;
    display: none;
    align-items: center;
    justify-content: center;
    width: $size;
    height: $size;
    position: absolute;
    font-weight: bold;
    @include header-font-family;
    color: #fff;
    top: calc(50% + #{($check-size - $size) / 2 - $size / 4});
    left: calc(50% + #{($check-size - $size) / 2 - $size / 4});
  }

  &.selected {
    background: rgba(#fff, 0.7);

    .fa-check,
    .order-counter {
      display: flex;
    }
  }
}

.logo {
  $width: $grid * 2;
  $height: $width * 3 / 2;
  height: $height;
  width: $width;
}
